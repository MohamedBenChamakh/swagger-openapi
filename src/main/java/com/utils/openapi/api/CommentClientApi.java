/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.utils.openapi.api;

import com.utils.openapi.model.CommentRequestBody;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-09-16T16:01:36.132603800+01:00[Africa/Lagos]")
@Validated
@Api(value = "CommentClient", description = "the CommentClient API")
public interface CommentClientApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /api/v1/comments
     *
     * @param commentRequestBody  (required)
     * @return comment created successfully (status code 201)
     */
    @ApiOperation(value = "", nickname = "createComment", notes = "", tags={ "comment-client", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "comment created successfully") })
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/v1/comments",
        consumes = { "application/json" }
    )
    default ResponseEntity<Void> _createComment(@ApiParam(value = "", required = true) @Valid @RequestBody CommentRequestBody commentRequestBody) {
        return createComment(commentRequestBody);
    }

    // Override this method
    default  ResponseEntity<Void> createComment(CommentRequestBody commentRequestBody) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
