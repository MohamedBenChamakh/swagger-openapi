openapi: 3.0.1
info:
  title: OpenAPI document
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Swagger UI
  - url: http://localhost:9090
    description: Post manager microservice

paths:
  /api/v1/posts:
    post:
      tags:
        - post-client
      operationId: createPost
      requestBody:
        required: true
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostRequestBody'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponseBody'
          description: post created successfully

    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 0
          required: true
          description: Page of post list
      tags:
        - post-client
      operationId: getAllPosts
      responses:
        '200':
          content:
            application/json:
             schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostResponseBody'
          description: posts returned successfully

  /api/v1/posts/{postId}:
    get:
      parameters:
        - in: path
          name: postId
          schema:
            type: string
          required: true
          description: post id
      tags:
        - post-client
      operationId: getPostById
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponseBody'
          description: post returned successfully

  /api/v1/comments:
    post:
      tags:
        - comment-client
      operationId: createComment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequestBody'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponseBody'
          description: comment created successfully


  /api/v1/users/{userId}:
    get:
      parameters:
        - in: path
          name: userId
          schema:
            type: string
          required: true
          description: user id
      tags:
        - user-client
      operationId: getUserById
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseBody'
          description: user returned successfully

  /api/v1/users:
    put:
      tags:
        - user-client
      operationId: updateUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestBody'
      responses:
        '204':
          description: user updated successfully


components:
  schemas:

    PostRequestBody:
      type: object
      required:
        - title
        - content
        - publisherId
      properties:
        title:
          type: string
        content:
          type: string
        createdAt:
          type: string
        publisherId:
          type: string

    PostResponseBody:
      type: object
      properties:
        id:
          type: string
        publisher:
            $ref: '#/components/schemas/PublisherResponseBody'
        title:
          type: string
        type:
          $ref: '#/components/schemas/PostTypeResponseBody'
        content:
          type: string
        createdAt:
          type: string
        comments:
          type: array
          items:
            $ref: '#/components/schemas/CommentResponseBody'

    PostTypeResponseBody:
      type: object
      properties:
        name:
          type: string
        iconUrl:
          type: string

    PublisherResponseBody:
      type: object
      properties:
        id:
          type: string
        username:
          type: string

    UserResponseBody:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        phoneNumber:
          type: string
        email:
          type: string

    UserRequestBody:
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        region:
          type: string
        phoneNumber:
          type: string
        email:
          type: string

    CommentRequestBody:
      type: object
      required:
        - content
        - postId
      properties:
        postId:
          type: string
        createdAt:
          type: string
        content:
          type: string
        like:
          type: boolean

    CommentResponseBody:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
        content:
          type: string
        like:
          type: boolean
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string